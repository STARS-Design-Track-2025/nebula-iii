00500093  // 00: addi x1, x0, 5        ; x1 = 5
01000083  // 04: lw   x1, 16(x0) 
00500113  // 08: addi x2, x0, 5        ; x2 = 5
00208463  // 0C: beq  x1, x2, +8       ; if x1 == x2, skip next line
07b00213  // 10: addi x4, x0, 123      ; x4 = 123 (skipped if branch taken)
1c801193  // 14: addi x3, x0, 456      ; x3 = 456
022085B3  // 18: mul  x11, x1, x2      ; x11 = x1 * x2
01000083  // 1C: lw   x1, 16(x0)       ; load x1 with MMIO[keypad] (0x10)
00302223  // 20: sw   x3, 4(x0)        ; store x3 to MMIO[4] (control)
00a02223  // 24: sw   x4, 8(x0)        ; store x4 to MMIO[8] (x-coord)
00502423  // 28: sw   x5, 12(x0)       ; store x5 to MMIO[12] (y-coord)
00500113   // 2C addi x2, x0, 5       ; x2 = 5
00208463   // 30 beq  x1, x2, +8      ; branch over next line if x1 == x2
07b00213   // 34 addi x4, x0, 123     ; skipped if branch taken
1c801193   // 38 addi x3, x0, 456     ; x3 = 456 (always runs)
00302223   // 3C sw x3, 4(x0)
022085B3   // 40 mul x11, x1, x2
07b00213   // 44 addi x4,x0,123







